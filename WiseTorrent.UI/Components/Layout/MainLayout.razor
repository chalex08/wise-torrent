@using WiseTorrent.UI.Services
@using WiseTorrent.UI.Components.Notification
@inherits LayoutComponentBase
@inject FullscreenStateService FullscreenService
@inject NotificationService NotificationService

<div class="page">
	<div class="sidebar">
		<NavMenu />
	</div>

	<main>
		<div class="top-row px-4" @onmousedown="DragWindow">
			<button class="btn btn-sm btn-outline-primary me-2" @onclick="ToggleFullscreen" @onmousedown:stopPropagation title="Toggle fullscreen">
				<span class="@FullscreenIconClass"></span>
			</button>
			<button class="btn btn-sm btn-outline-primary" @onclick="Close" @onmousedown:stopPropagation title="Close">
				<span class="bi bi-x-lg"></span>
			</button>
		</div>

		<article class="content px-4">
			@Body
		</article>
	</main>
</div>

@* This is a top level element that renders any notifications on any page *@
<Notification />

@code {
	private string FullscreenIconClass =>
		FullscreenService.IsFullscreen ? "bi bi-fullscreen-exit" : "bi bi-arrows-fullscreen";

	protected override void OnInitialized()
	{
		FullscreenService.OnChange += StateHasChanged;
	}

	void ToggleFullscreen() => MainWindow.Instance?.ToggleFullscreen();

	void Close() => MainWindow.Instance?.Close();

	void DragWindow() => MainWindow.Instance?.DragWindow();

	public void Dispose()
	{
		FullscreenService.OnChange -= StateHasChanged;
	}
}

@namespace WiseTorrent.UI.Components.Layout